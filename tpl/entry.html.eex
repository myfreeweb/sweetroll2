<%= if length(as_many(@entry.props["in-reply-to"])) > 0 do %>
	<%= icon name: "reply", class: ["entry-type-icon", "entry-type-icon-reply"], title: "In reply to" %>
<% end %>

<%= if length(as_many(@entry.props["like-of"])) > 0 do %>
	<%= icon name: "star", class: ["entry-type-icon", "entry-type-icon-like"], title: "Like of" %>
<% end %>

<%= if length(as_many(@entry.props["repost-of"])) > 0 do %>
	<%= icon name: "megaphone", class: ["entry-type-icon", "entry-type-icon-repost"], title: "Repost of" %>
<% end %>

<%= if length(as_many(@entry.props["bookmark-of"])) > 0 do %>
	<%= icon name: "bookmark", class: ["entry-type-icon", "entry-type-icon-bookmark"], title: "Bookmark of" %>
<% end %>

<%= for irt <- Stream.map(as_many(@entry.props["in-reply-to"]), fn e -> to_cite(e, preload: @preload) end) do %>
	<%= cite cite: irt, preload: @preload, prop: "in-reply-to" %>
<% end %>

<%= for lko <- Stream.map(as_many(@entry.props["like-of"]), fn e -> to_cite(e, preload: @preload) end) do %>
	<%= cite cite: lko, preload: @preload, prop: "like-of" %>
<% end %>

<%= for rpo <- Stream.map(as_many(@entry.props["repost-of"]), fn e -> to_cite(e, preload: @preload) end) do %>
	<%= cite cite: rpo, preload: @preload, prop: "repost-of" %>
<% end %>

<%= for bko <- Stream.map(as_many(@entry.props["bookmark-of"]), fn e -> to_cite(e, preload: @preload) end) do %>
	<%= cite cite: bko, preload: @preload, prop: "bookmark-of" %>
<% end %>

<%= if @entry.props["name"] do %>
	<h1 class="p-name entry-txt">
		<%= content_tag :a, [href: @entry.url, class: "u-url"], do: @entry.props["name"] %>
	</h1>
<% end %>

<% content_tree = @entry.props["content"] |> as_one |> Markup.content_to_tree %>

<%= for photo <- Markup.exclude_inlined_media(content_tree, "photo", as_many(@entry.props["photo"])) do %>
	<%= photo_rendered photo %>
<% end %>

<%= if content_tree != [] do %>
	<div class="e-content entry-txt">
		<%= content_tree |> inline_media_into_content(props: @entry.props) |> Markup.render_tree |> raw %>
	</div>
<% end %>

<div class="entry-info entry-txt">
	posted
	<%= time_permalink @entry, rel: "bookmark" %>

	in
	<%= for feed <- Stream.filter(Doc.feeds(@preload), fn f -> Doc.in_feed?(@entry, f) end) do %>
		<%= content_tag :a, href: feed.url, rel: "feed", type: "text/html", class: (if feed.url == @cur_url, do: "current", else: "") do %>
			<%= as_one feed.props["name"] %>
		<% end %>
	<% end %>

	<%= if @entry.props["client-id"] do %>
		using
		<%= client_id @entry.props["client-id"] %>
	<% end %>

	<%= if @entry.updated do %>
		and updated
		<%= content_tag :time, datetime: DateTime.to_iso8601(@entry.updated), class: "dt-updated" do %>
			<%= DateTime.to_iso8601 @entry.updated %>
		<% end %>
	<% end %>

	<%= if @entry.props["syndication"] do %>
		/ also on:
		<%= for synd <- as_many(@entry.props["syndication"]) do %>
			<%= content_tag :a, href: synd, class: "u-syndication" do %>
				<%= syndication_name synd %>
			<% end %>
		<% end %>
	<% end %>
</div>
